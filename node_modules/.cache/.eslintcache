[{"D:\\documents\\js\\time-management-tool\\src\\index.js":"1","D:\\documents\\js\\time-management-tool\\src\\pages\\home\\index.js":"2","D:\\documents\\js\\time-management-tool\\src\\pages\\home\\components\\list.js":"3","D:\\documents\\js\\time-management-tool\\src\\pages\\home\\components\\edit.js":"4","D:\\documents\\js\\time-management-tool\\src\\pages\\home\\components\\item.js":"5","D:\\documents\\js\\time-management-tool\\src\\pages\\home\\components\\home.js":"6","D:\\documents\\js\\time-management-tool\\src\\pages\\calendar\\calendar.js":"7","D:\\documents\\js\\time-management-tool\\src\\pages\\calendar\\bydate.js":"8","D:\\documents\\js\\time-management-tool\\src\\pages\\calendar\\byweek.js":"9","D:\\documents\\js\\time-management-tool\\src\\pages\\calendar\\bymonth.js":"10","D:\\documents\\js\\time-management-tool\\src\\pages\\calendar\\monthdisplay.js":"11","D:\\documents\\js\\time-management-tool\\src\\pages\\calendar\\cell.js":"12"},{"size":267,"mtime":1688982205960,"results":"13","hashOfConfig":"14"},{"size":724,"mtime":1689052917074,"results":"15","hashOfConfig":"14"},{"size":869,"mtime":1688808861419,"results":"16","hashOfConfig":"14"},{"size":1802,"mtime":1688983975158,"results":"17","hashOfConfig":"14"},{"size":1141,"mtime":1688984003738,"results":"18","hashOfConfig":"14"},{"size":2154,"mtime":1689251838774,"results":"19","hashOfConfig":"14"},{"size":2962,"mtime":1689251831628,"results":"20","hashOfConfig":"14"},{"size":2519,"mtime":1689165910458,"results":"21","hashOfConfig":"14"},{"size":135,"mtime":1689077546829,"results":"22","hashOfConfig":"14"},{"size":2490,"mtime":1689242781857,"results":"23","hashOfConfig":"14"},{"size":1307,"mtime":1689248835475,"results":"24","hashOfConfig":"14"},{"size":2075,"mtime":1689255325015,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"asbp6o",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},"D:\\documents\\js\\time-management-tool\\src\\index.js",[],[],[],"D:\\documents\\js\\time-management-tool\\src\\pages\\home\\index.js",[],[],"D:\\documents\\js\\time-management-tool\\src\\pages\\home\\components\\list.js",[],[],"D:\\documents\\js\\time-management-tool\\src\\pages\\home\\components\\edit.js",["71","72","73"],[],"import { useState } from \"react\"\r\nimport { v4 } from \"uuid\"\r\n\r\nconst Edit = ({ add, rerenderStatus, data }) => {\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    function titleChange(e) {\r\n        setTitle(e.target.value);\r\n    }\r\n\r\n    let currentDate = new Date();\r\n    const [date, setDate] = useState(currentDate.getFullYear() + \"-\" + (new String(currentDate.getMonth()+1)).padStart(2, \"0\") + \"-\" + (new String(currentDate.getDate())).padStart(2, \"0\") );\r\n    function dateChange(e) {\r\n        setDate(e.target.value);\r\n    }\r\n\r\n    const [note, setNote] = useState(\"\");\r\n    function noteChange(e) {\r\n        setNote(e.target.value);\r\n    }\r\n\r\n    \r\n\r\n    function addItem() {\r\n        if (title == \"\") {\r\n            alert(\"請輸入標題\")\r\n            return \r\n        };\r\n\r\n        add(function (prev) {\r\n            return [\r\n                {\r\n                    id: v4(),\r\n                    title,\r\n                    date,\r\n                    note,\r\n                },\r\n                ...prev,\r\n            ];\r\n        });\r\n        setTitle(\"\");\r\n        setNote(\"\");\r\n        rerenderStatus.current = true;\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"edit\">\r\n            <p id=\"title\" className=\"edit\">標題</p>\r\n            <input value={title} onChange={titleChange} type=\"text\" id=\"title\" className=\"edit\" required/>\r\n            <p id=\"date\" className=\"edit\">日期</p>\r\n            <input value={date} onChange={dateChange} type=\"date\" id=\"date\" className=\"edit\" required/>\r\n            <p id=\"note\" className=\"edit\">內容</p>\r\n            <input value={note} onChange={noteChange} type=\"text\" id=\"note\" className=\"edit\"/>\r\n            <button type=\"submit\" className=\"add\" onClick={addItem}>新增</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Edit;","D:\\documents\\js\\time-management-tool\\src\\pages\\home\\components\\item.js",["74","75","76"],[],"import seedrandom, { alea, xor128, xor4096 } from \"seedrandom\";\r\n\r\nconst Item = ({id, note, date, title, setData, rerenderStatus}) => {\r\n\r\n    function deleteItem() {\r\n        setData(function(prev) {\r\n            return prev.filter(item=> item.id !== id)\r\n        })\r\n        rerenderStatus.current = true;\r\n    }\r\n    \r\n    const rng = new xor4096(date);\r\n    const randomColor = Math.floor(rng()*16777215).toString(16).padStart(6, \"0\");\r\n    const blackandwhite = 0.299*parseInt(randomColor.substring(0,2), 16)+0.587*parseInt(randomColor.substring(2,4), 16)+0.114*parseInt(randomColor.substring(4,6), 16)\r\n    \r\n  \r\n    return (\r\n        <div className=\"item\" style={{backgroundColor: \"#\"+randomColor }}>\r\n            <div className=\"content\" style={{color: (blackandwhite > 128) ? \"black\" : \"white\"}}>\r\n                <p className=\"item title\">{title}</p>\r\n                <p className=\"item date\">{date}</p>\r\n                <p className=\"item note\">{note}</p>\r\n            </div>\r\n            <button onClick={deleteItem} className=\"delete\">刪除</button>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item;","D:\\documents\\js\\time-management-tool\\src\\pages\\home\\components\\home.js",["77","78","79","80","81","82"],[],"import Edit from \"./edit\"\r\nimport List from \"./list\"\r\nimport \"./../index.css\"\r\nimport { useState, useEffect, useRef } from \"react\"\r\nimport {HiOutlineMenu} from \"react-icons/hi\"\r\nimport {Popup} from \"reactjs-popup\"\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\n\r\nconst Home = ({data, setData, rerenderStatus}) => {\r\n\r\n    \r\n\r\n    useEffect(()=> {\r\n        if (localStorage.getItem(\"user\") != null) {\r\n            setData(JSON.parse(localStorage.getItem(\"user\")))\r\n        }\r\n    }, [\"a\"])\r\n\r\n    useEffect(()=> {\r\n        if (rerenderStatus.current == false) {\r\n            return;\r\n        } else {\r\n            localStorage.setItem('user', JSON.stringify(data));\r\n            rerenderStatus.current = false; \r\n        }\r\n    }, [data]);\r\n\r\n    return (\r\n    <div>\r\n        <div className=\"app\">\r\n            <div className=\"menu\"><Popup trigger={<button className=\"menu\"><HiOutlineMenu/></button>} modal nested>\r\n                {\r\n                    close => (\r\n                        <div className='modal' id=\"popupselectmenu\">\r\n                            <h3 className='content'>選擇頁面</h3>\r\n                            <div className=\"navlink\">\r\n                                <NavLink to=\"/\" style={{ textDecoration: 'none' }} ><li id=\"selectPage\">主頁面</li></NavLink>\r\n                                <NavLink to=\"/Calendar\" style={{ textDecoration: 'none' }} ><li id=\"selectPage\">日曆</li></NavLink>\r\n                            </div>\r\n                            <div>\r\n                                <button id=\"closePopup\" onClick=\r\n                                    {() => close()}>\r\n                                        Close\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                </Popup></div>\r\n            <div className=\"main\">\r\n            <h1>FILL</h1>\r\n            <Edit data={data} add={setData} rerenderStatus={rerenderStatus}/>\r\n            <List data={data} setData={setData} rerenderStatus={rerenderStatus}/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Home","D:\\documents\\js\\time-management-tool\\src\\pages\\calendar\\calendar.js",["83","84","85","86","87"],[],"import Popup from \"reactjs-popup\";\r\nimport { HiOutlineMenu } from \"react-icons/hi\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ByDate from \"./bydate\";\r\nimport ByWeek from \"./byweek\";\r\nimport ByMonth from \"./bymonth\";\r\n\r\nconst Cal = ({ data, setData, rerenderStatus }) => {\r\n\r\n    useEffect(()=> {\r\n        if (localStorage.getItem(\"user\") != null) {\r\n            setData(JSON.parse(localStorage.getItem(\"user\")))\r\n        }\r\n    }, [\"a\"]);\r\n\r\n    useEffect(()=> {\r\n        if (rerenderStatus.current == false) {\r\n            return;\r\n        } else {\r\n            localStorage.setItem('user', JSON.stringify(data));\r\n            rerenderStatus.current = false; \r\n        }\r\n    }, [data]);\r\n\r\n    const [viewType, setviewType] = useState(\"Day\");\r\n    const changeview = (e) => {\r\n        setviewType(e.target.value)\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        <div className=\"app\">\r\n            <div className=\"menu\"><Popup trigger={<button className=\"menu\"><HiOutlineMenu/></button>} modal nested>\r\n                {\r\n                    close => (\r\n                        <div className='modal' id=\"popupselectmenu\">\r\n                            <h3 className='content'>選擇頁面</h3>\r\n                            <div className=\"navlink\">\r\n                                <NavLink to=\"/\" style={{ textDecoration: 'none' }} ><li id=\"selectPage\">主頁面</li></NavLink>\r\n                                <NavLink to=\"/Calendar\" style={{ textDecoration: 'none' }} ><li id=\"selectPage\">日曆</li></NavLink>\r\n                            </div>\r\n                            <div>\r\n                                <button id=\"closePopup\" onClick=\r\n                                    {() => close()}>\r\n                                        Close\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                </Popup>\r\n            </div>\r\n            <div className=\"cal\">\r\n                <h1>CALENDAR</h1>            \r\n                <select defaultValue=\"Day\" id=\"changecalendarviewtype\"  onChange={changeview}>\r\n                    <option value=\"Day\">Day</option>\r\n                    <option value=\"Week\">Week</option>\r\n                    <option value=\"Month\">Month</option>\r\n                </select>\r\n                <div className=\"calview\">\r\n                    {(()=>{switch(viewType) {\r\n                        case \"Day\": return (<ByDate data={data} setData={setData} rerenderStatus={rerenderStatus} />);\r\n                        case \"Week\": return (<ByWeek data={data} setData={setData} rerenderStatus={rerenderStatus} />);\r\n                        case \"Month\": return (<ByMonth data={data} setData={setData} rerenderStatus={rerenderStatus} />);\r\n                    }})()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Cal;","D:\\documents\\js\\time-management-tool\\src\\pages\\calendar\\bydate.js",["88","89","90","91","92","93","94","95","96"],[],"import { AiOutlineDoubleLeft, AiOutlineDoubleRight } from \"react-icons/ai\";\r\nimport { useState } from \"react\";\r\nimport Item from \"./../home/components/item\";\r\n\r\nconst ByDate = ({ data, setData, rerenderStatus }) => {\r\n\r\n    let currentDate = new Date();\r\n    const [selectdate, setselectdate] = useState(currentDate.getFullYear() + \"-\" + (new String(currentDate.getMonth()+1)).padStart(2, \"0\") + \"-\" + (new String(currentDate.getDate())).padStart(2, \"0\") );\r\n    const changedate = (e) => {\r\n        setselectdate(e.target.value);\r\n    }\r\n\r\n    const nextdate = () => {\r\n        if (selectdate != \"\") {\r\n            let dateobj = new Date(selectdate);\r\n            dateobj.setDate(dateobj.getDate()+1);\r\n            setselectdate(dateobj.getFullYear() + \"-\" + (new String(dateobj.getMonth()+1)).padStart(2, \"0\") + \"-\" + (new String(dateobj.getDate())).padStart(2, \"0\") );\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const prevdate = () => {\r\n        if (selectdate != \"\") {\r\n            let dateobj = new Date(selectdate);\r\n            dateobj.setDate(dateobj.getDate()-1);\r\n            setselectdate(dateobj.getFullYear() + \"-\" + (new String(dateobj.getMonth()+1)).padStart(2, \"0\") + \"-\" + (new String(dateobj.getDate())).padStart(2, \"0\") );\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"datecontainer\">\r\n            <div className=\"selectDate\">\r\n                <button className=\"changedate\" id=\"lastdate\" onClick={prevdate} ><AiOutlineDoubleLeft/></button>\r\n                <input className=\"changedate\" type=\"date\" value={selectdate} onChange={changedate} />\r\n                <button className=\"changedate\" id=\"nextdate\" onClick={nextdate} ><AiOutlineDoubleRight/></button>\r\n            </div>\r\n            <div className=\"list\">\r\n                {data.filter(d => d.date == selectdate).map(\r\n                    (item) => {\r\n                        const { title, date, note, id} = item;\r\n                        return (\r\n                            <Item \r\n                            key={id}\r\n                            id={id}\r\n                            title={title}\r\n                            date={date}\r\n                            note={note}\r\n                            setData={setData}\r\n                            rerenderStatus={rerenderStatus}\r\n                            />\r\n                        )\r\n                    }\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ByDate;","D:\\documents\\js\\time-management-tool\\src\\pages\\calendar\\byweek.js",[],[],"D:\\documents\\js\\time-management-tool\\src\\pages\\calendar\\bymonth.js",["97","98","99","100"],[],"import { useState } from \"react\";\r\nimport { AiOutlineDoubleLeft, AiOutlineDoubleRight } from \"react-icons/ai\";\r\nimport MonthDisplay from \"./monthdisplay\";\r\n\r\nconst ByMonth = ({ data, setData, rerenderStatus }) => {\r\n\r\n    let currentDate = new Date();\r\n\r\n    const [selectmonthMonth, setselectmonthMonth] = useState(new Number(currentDate.getMonth()+1));\r\n    const changemonth_month = (e) => {\r\n        setselectmonthMonth(e.target.value);\r\n    };\r\n\r\n    const [selectmonthYear, setselectmonthYear] = useState(new Number(currentDate.getFullYear()));\r\n    const changemonth_year = (e) => {\r\n        setselectmonthYear(e.target.value);\r\n    }\r\n\r\n    const nextMonth = () => {\r\n        if (selectmonthMonth <= 11 & selectmonthMonth >= 1) {\r\n            setselectmonthMonth(selectmonthMonth+1);\r\n        } else if (selectmonthMonth == 12) {\r\n            setselectmonthYear(selectmonthYear+1);\r\n            setselectmonthMonth(1);\r\n        };\r\n    }\r\n\r\n    const prevMonth = () => {\r\n        if (selectmonthMonth <= 12 & selectmonthMonth >= 2) {\r\n            setselectmonthMonth(selectmonthMonth-1);\r\n        } else if (selectmonthMonth == 1) {\r\n            setselectmonthYear(selectmonthYear-1);\r\n            setselectmonthMonth(12);\r\n        };\r\n    }\r\n\r\n    return (\r\n        <div className=\"monthcontainer\">\r\n            <div className=\"caltop\">\r\n                <button onClick={prevMonth} className=\"changemonth\"><AiOutlineDoubleLeft/></button>\r\n                <div className=\"changemonthcontainer\">\r\n                    <input className=\"changemonth_year\" type=\"number\" value={selectmonthYear} onChange={changemonth_year} />\r\n                    <input className=\"changemonth_month\" type=\"text\" value={selectmonthMonth} onChange={changemonth_month} />\r\n                </div>\r\n                <button onClick={nextMonth} className=\"changemonth\"><AiOutlineDoubleRight/></button>\r\n            </div>\r\n            <div className=\"calshowweek\">\r\n                <p id=\"week\">星期天</p>\r\n                <p id=\"week\">星期一</p>\r\n                <p id=\"week\">星期二</p>\r\n                <p id=\"week\">星期三</p>\r\n                <p id=\"week\">星期四</p>\r\n                <p id=\"week\">星期五</p>\r\n                <p id=\"week\">星期六</p>\r\n            </div>\r\n            <MonthDisplay data={data} setData={setData} rerenderStatus={rerenderStatus} selectmonthMonth={selectmonthMonth} selectmonthYear={selectmonthYear} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ByMonth;\r\n","D:\\documents\\js\\time-management-tool\\src\\pages\\calendar\\monthdisplay.js",["101","102"],[],"import Cell from \"./cell\";\r\n\r\nconst MonthDisplay = ({ data, setData, rerenderStatus, selectmonthMonth, selectmonthYear }) => {\r\n\r\n    const daysinamonth = new Date(selectmonthYear, selectmonthMonth, 0).getDate();\r\n    let firstdayinamonth = new Date(selectmonthYear,selectmonthMonth-1,1);\r\n    let lastdayinamonth = new Date(selectmonthYear,selectmonthMonth-1, daysinamonth);\r\n\r\n    let datelist = Array.from({length: daysinamonth}, (_, i) => i + 1);\r\n    for (let i=0;i<firstdayinamonth.getDay();i++) {\r\n        datelist.unshift(undefined);\r\n    }\r\n\r\n    \r\n\r\n    const sheet = {\r\n        \"JAN\": 1,\r\n        \"FEB\": 2,\r\n        \"MAR\": 3,\r\n        \"APR\": 4,\r\n        \"MAY\": 5,\r\n        \"JUN\": 6,\r\n        \"JUL\": 7,\r\n        \"AUG\": 8,\r\n        \"SEP\": 9,\r\n        \"OCT\": 10,\r\n        \"NOV\": 11,\r\n        \"DEC\": 12\r\n    }\r\n\r\n    return (\r\n        <div className=\"monthdisplay\">\r\n            {datelist.map((d,i)=>{\r\n                return (<div className=\"cellcontainer\" id={d}>\r\n                        <p className=\"celldate\">{d}</p>\r\n                        <Cell selectmonthMonth={selectmonthMonth} selectmonthYear={selectmonthYear} data={data} setData={setData} rerenderStatus={rerenderStatus} date={d}/>\r\n                    </div>)\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MonthDisplay;","D:\\documents\\js\\time-management-tool\\src\\pages\\calendar\\cell.js",["103","104","105","106","107","108"],[],"import { xor4096 } from \"seedrandom\";\r\nimport Popup from \"reactjs-popup\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst Cell = ({ data, setData, rerenderStatus, selectmonthMonth, selectmonthYear, date }) => {\r\n\r\n    let monthdata = Array.from(data);\r\n    const whatdateisit = (new String(selectmonthYear))+\"-\"+(new String(selectmonthMonth).padStart(2, \"0\"))+\"-\"+(new String(date)).padStart(2, \"0\");\r\n    monthdata = monthdata.filter(d => d.date == (whatdateisit));\r\n    const [open, setOpen] = useState(false);  \r\n    const closeModal = () => setOpen(false);\r\n\r\n    const rng = new xor4096(whatdateisit);\r\n    const randomColor = Math.floor(rng()*16777215).toString(16).padStart(6, \"0\");\r\n    const blackandwhite = 0.299*parseInt(randomColor.substring(0,2), 16)+0.587*parseInt(randomColor.substring(2,4), 16)+0.114*parseInt(randomColor.substring(4,6), 16)\r\n    const [item,setItem] = useState({})\r\n\r\n    const [mousePos, setMousePos] = useState({});\r\n\r\n    useEffect(() => {\r\n    const handleMouseMove = (event) => {\r\n      setMousePos({ x: event.clientX, y: event.clientY });\r\n    };\r\n\r\n    window.addEventListener('mousemove', handleMouseMove);\r\n\r\n    return () => {\r\n      window.removeEventListener(\r\n        'mousemove',\r\n        handleMouseMove\r\n            );\r\n        };\r\n     }, []);\r\n\r\n    return (\r\n    <div className=\"cell\">\r\n        {monthdata.map((d)=>{\r\n            return <div className=\"calendarmonthcolorbar\" id={d.id} style={{backgroundColor: \"#\"+randomColor}} onClick={() => {\r\n                setOpen(o => !o);\r\n                setItem(d);\r\n            }} >\r\n            </div>\r\n        })}\r\n        <Popup open={open} closeOnDocumentClick onClose={closeModal} >\r\n            <div className=\"modal\" id=\"calendarmonthclickevent\" style={{border: \"2px solid \"+\"#\"+randomColor, top: mousePos.y}}>\r\n                <p className=\"item title\">{item.title}</p>\r\n                <p className=\"item date\">{item.date}</p>\r\n                <p className=\"item note\">{item.note}</p>\r\n            </div>\r\n        </Popup>\r\n    </div>)\r\n}\r\n\r\nexport default Cell",{"ruleId":"109","severity":1,"message":"110","line":12,"column":73,"nodeType":"111","messageId":"112","endLine":12,"endColumn":109},{"ruleId":"109","severity":1,"message":"110","line":12,"column":137,"nodeType":"111","messageId":"112","endLine":12,"endColumn":170},{"ruleId":"113","severity":1,"message":"114","line":25,"column":19,"nodeType":"115","messageId":"116","endLine":25,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":1,"column":8,"nodeType":"119","messageId":"120","endLine":1,"endColumn":18},{"ruleId":"117","severity":1,"message":"121","line":1,"column":22,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"117","severity":1,"message":"122","line":1,"column":28,"nodeType":"119","messageId":"120","endLine":1,"endColumn":34},{"ruleId":"117","severity":1,"message":"123","line":4,"column":10,"nodeType":"119","messageId":"120","endLine":4,"endColumn":18},{"ruleId":"117","severity":1,"message":"124","line":4,"column":31,"nodeType":"119","messageId":"120","endLine":4,"endColumn":37},{"ruleId":"125","severity":1,"message":"126","line":18,"column":8,"nodeType":"127","endLine":18,"endColumn":13,"suggestions":"128"},{"ruleId":"125","severity":1,"message":"129","line":18,"column":9,"nodeType":"130","endLine":18,"endColumn":12},{"ruleId":"113","severity":1,"message":"114","line":21,"column":36,"nodeType":"115","messageId":"116","endLine":21,"endColumn":38},{"ruleId":"125","severity":1,"message":"131","line":27,"column":8,"nodeType":"127","endLine":27,"endColumn":14,"suggestions":"132"},{"ruleId":"125","severity":1,"message":"126","line":15,"column":8,"nodeType":"127","endLine":15,"endColumn":13,"suggestions":"133"},{"ruleId":"125","severity":1,"message":"129","line":15,"column":9,"nodeType":"130","endLine":15,"endColumn":12},{"ruleId":"113","severity":1,"message":"114","line":18,"column":36,"nodeType":"115","messageId":"116","endLine":18,"endColumn":38},{"ruleId":"125","severity":1,"message":"131","line":24,"column":8,"nodeType":"127","endLine":24,"endColumn":14,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":62,"column":28,"nodeType":"137","messageId":"138","endLine":66,"endColumn":22},{"ruleId":"109","severity":1,"message":"110","line":8,"column":85,"nodeType":"111","messageId":"112","endLine":8,"endColumn":121},{"ruleId":"109","severity":1,"message":"110","line":8,"column":149,"nodeType":"111","messageId":"112","endLine":8,"endColumn":182},{"ruleId":"113","severity":1,"message":"139","line":14,"column":24,"nodeType":"115","messageId":"116","endLine":14,"endColumn":26},{"ruleId":"109","severity":1,"message":"110","line":17,"column":58,"nodeType":"111","messageId":"112","endLine":17,"endColumn":90},{"ruleId":"109","severity":1,"message":"110","line":17,"column":118,"nodeType":"111","messageId":"112","endLine":17,"endColumn":147},{"ruleId":"113","severity":1,"message":"139","line":24,"column":24,"nodeType":"115","messageId":"116","endLine":24,"endColumn":26},{"ruleId":"109","severity":1,"message":"110","line":27,"column":58,"nodeType":"111","messageId":"112","endLine":27,"endColumn":90},{"ruleId":"109","severity":1,"message":"110","line":27,"column":118,"nodeType":"111","messageId":"112","endLine":27,"endColumn":147},{"ruleId":"113","severity":1,"message":"114","line":41,"column":42,"nodeType":"115","messageId":"116","endLine":41,"endColumn":44},{"ruleId":"109","severity":1,"message":"140","line":9,"column":62,"nodeType":"111","messageId":"112","endLine":9,"endColumn":98},{"ruleId":"109","severity":1,"message":"140","line":14,"column":60,"nodeType":"111","messageId":"112","endLine":14,"endColumn":97},{"ruleId":"113","severity":1,"message":"114","line":22,"column":37,"nodeType":"115","messageId":"116","endLine":22,"endColumn":39},{"ruleId":"113","severity":1,"message":"114","line":31,"column":37,"nodeType":"115","messageId":"116","endLine":31,"endColumn":39},{"ruleId":"117","severity":1,"message":"141","line":7,"column":9,"nodeType":"119","messageId":"120","endLine":7,"endColumn":24},{"ruleId":"117","severity":1,"message":"142","line":16,"column":11,"nodeType":"119","messageId":"120","endLine":16,"endColumn":16},{"ruleId":"109","severity":1,"message":"110","line":8,"column":27,"nodeType":"111","messageId":"112","endLine":8,"endColumn":54},{"ruleId":"109","severity":1,"message":"110","line":8,"column":61,"nodeType":"111","messageId":"112","endLine":8,"endColumn":89},{"ruleId":"109","severity":1,"message":"110","line":8,"column":113,"nodeType":"111","messageId":"112","endLine":8,"endColumn":129},{"ruleId":"113","severity":1,"message":"114","line":9,"column":46,"nodeType":"115","messageId":"116","endLine":9,"endColumn":48},{"ruleId":"117","severity":1,"message":"143","line":15,"column":11,"nodeType":"119","messageId":"120","endLine":15,"endColumn":24},{"ruleId":"144","severity":1,"message":"145","line":45,"column":93,"nodeType":"115","messageId":"146","endLine":45,"endColumn":94},"no-new-wrappers","Do not use String as a constructor.","NewExpression","noConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'seedrandom' is defined but never used.","Identifier","unusedVar","'alea' is defined but never used.","'xor128' is defined but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setData'. Either include it or remove the dependency array. If 'setData' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["147"],"The \"a\" literal is not a valid dependency because it never changes. You can safely remove it.","Literal","React Hook useEffect has a missing dependency: 'rerenderStatus'. Either include it or remove the dependency array.",["148"],["149"],["150"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Expected '!==' and instead saw '!='.","Do not use Number as a constructor.","'lastdayinamonth' is assigned a value but never used.","'sheet' is assigned a value but never used.","'blackandwhite' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"151","fix":"155"},{"desc":"153","fix":"156"},"Update the dependencies array to be: [setData]",{"range":"157","text":"158"},"Update the dependencies array to be: [data, rerenderStatus]",{"range":"159","text":"160"},{"range":"161","text":"158"},{"range":"162","text":"160"},[482,487],"[setData]",[730,736],"[data, rerenderStatus]",[488,493],[737,743]]