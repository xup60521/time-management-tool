{"ast":null,"code":"var _jsxFileName = \"D:\\\\documents\\\\js\\\\time-management-tool\\\\src\\\\pages\\\\group\\\\groupsetting.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Menu from \"../menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupSetting = _ref => {\n  _s();\n  let {\n    data,\n    setData,\n    settingprofile,\n    setsettingprofile\n  } = _ref;\n  let grouplist = data.map(item => item.group);\n  const [selectedgroup, setselectedgroup] = useState(\"\");\n  const ChangeGroup = e => {\n    setselectedgroup(e.target.value);\n  };\n  const [color, setcolor] = useState(\"\");\n  const Changecolor = e => {\n    setcolor(e.target.value);\n  };\n  let profilegroup = settingprofile[\"group\"].map(i => i.name);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groupsetting\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Group Setting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"groupsetting\",\n        children: \"Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changecolor\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          list: \"grouplist\",\n          id: \"changegroup\",\n          value: selectedgroup,\n          onChange: ChangeGroup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"grouplist\",\n          children: grouplist.map(d => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: d\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          id: \"inputcolor\",\n          value: color,\n          onChange: Changecolor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), JSON.stringify(profilegroup)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(GroupSetting, \"inVIacaBLx0dQU4ne3clYyxYrKY=\");\n_c = GroupSetting;\nexport default GroupSetting;\nvar _c;\n$RefreshReg$(_c, \"GroupSetting\");","map":{"version":3,"names":["useState","Menu","jsxDEV","_jsxDEV","GroupSetting","_ref","_s","data","setData","settingprofile","setsettingprofile","grouplist","map","item","group","selectedgroup","setselectedgroup","ChangeGroup","e","target","value","color","setcolor","Changecolor","profilegroup","i","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","list","onChange","d","type","JSON","stringify","_c","$RefreshReg$"],"sources":["D:/documents/js/time-management-tool/src/pages/group/groupsetting.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport Menu from \"../menu\";\r\n\r\nconst GroupSetting = ({ data, setData, settingprofile, setsettingprofile }) => {\r\n\r\n    let grouplist = data.map((item)=>   item.group    );\r\n    const [selectedgroup, setselectedgroup] = useState(\"\");\r\n    const ChangeGroup = (e) => {\r\n        setselectedgroup(e.target.value);\r\n    }\r\n\r\n    const [color, setcolor] = useState(\"\");\r\n    const Changecolor = (e) => {\r\n        setcolor(e.target.value);\r\n    }\r\n\r\n    let profilegroup = settingprofile[\"group\"].map((i)=>i.name);\r\n\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <Menu/>\r\n            <div className=\"groupsetting\">\r\n                <h1>Group Setting</h1>\r\n                <h3 id=\"groupsetting\">Color</h3>\r\n                <div className=\"changecolor\">\r\n                    <input list=\"grouplist\" id=\"changegroup\" value={selectedgroup} onChange={ChangeGroup} />\r\n                    <datalist id=\"grouplist\">\r\n                    {grouplist.map((d)=> {\r\n                        return (\r\n                            <option value={d} />\r\n                        )\r\n                    })}\r\n                    </datalist>\r\n                    <input type=\"color\" id=\"inputcolor\" value={color} onChange={Changecolor} />\r\n                </div>\r\n                {JSON.stringify(profilegroup)}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default GroupSetting;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,YAAY,GAAGC,IAAA,IAA0D;EAAAC,EAAA;EAAA,IAAzD;IAAEC,IAAI;IAAEC,OAAO;IAAEC,cAAc;IAAEC;EAAkB,CAAC,GAAAL,IAAA;EAEtE,IAAIM,SAAS,GAAGJ,IAAI,CAACK,GAAG,CAAEC,IAAI,IAAMA,IAAI,CAACC,KAAS,CAAC;EACnD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMiB,WAAW,GAAIC,CAAC,IAAK;IACvBF,gBAAgB,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMuB,WAAW,GAAIL,CAAC,IAAK;IACvBI,QAAQ,CAACJ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EAED,IAAII,YAAY,GAAGf,cAAc,CAAC,OAAO,CAAC,CAACG,GAAG,CAAEa,CAAC,IAAGA,CAAC,CAACC,IAAI,CAAC;EAG3D,oBACIvB,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBzB,OAAA,CAACF,IAAI;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACP7B,OAAA;MAAKwB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzBzB,OAAA;QAAAyB,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtB7B,OAAA;QAAI8B,EAAE,EAAC,cAAc;QAAAL,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChC7B,OAAA;QAAKwB,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACxBzB,OAAA;UAAO+B,IAAI,EAAC,WAAW;UAACD,EAAE,EAAC,aAAa;UAACb,KAAK,EAAEL,aAAc;UAACoB,QAAQ,EAAElB;QAAY;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxF7B,OAAA;UAAU8B,EAAE,EAAC,WAAW;UAAAL,QAAA,EACvBjB,SAAS,CAACC,GAAG,CAAEwB,CAAC,IAAI;YACjB,oBACIjC,OAAA;cAAQiB,KAAK,EAAEgB;YAAE;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAE5B,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACQ,CAAC,eACX7B,OAAA;UAAOkC,IAAI,EAAC,OAAO;UAACJ,EAAE,EAAC,YAAY;UAACb,KAAK,EAAEC,KAAM;UAACc,QAAQ,EAAEZ;QAAY;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1E,CAAC,EACLM,IAAI,CAACC,SAAS,CAACf,YAAY,CAAC;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC1B,EAAA,CArCIF,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AAuClB,eAAeA,YAAY;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}