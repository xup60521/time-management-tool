{"ast":null,"code":"var _jsxFileName = \"D:\\\\documents\\\\js\\\\time-management-tool\\\\src\\\\pages\\\\group\\\\groupsetting.js\",\n  _s = $RefreshSig$();\nimport { useDebugValue, useEffect, useState } from \"react\";\nimport Menu from \"../menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupSetting = _ref => {\n  _s();\n  let {\n    data,\n    setData,\n    settingprofile,\n    setsettingprofile,\n    rerenderStatus\n  } = _ref;\n  useEffect(() => {\n    if (localStorage.getItem(\"user\") != null) {\n      setData(JSON.parse(localStorage.getItem(\"user\")));\n    }\n  }, [\"a\"]);\n  useEffect(() => {\n    if (rerenderStatus.current == false) {\n      return;\n    } else {\n      localStorage.setItem('user', JSON.stringify(data));\n      rerenderStatus.current = false;\n    }\n  }, [data]);\n  let grouplist = data.map(item => item.group);\n  const [selectedgroup, setselectedgroup] = useState(\"\");\n  let groupinsetting = settingprofile.group.map(d => d.name);\n  const ChangeGroup = e => {\n    setselectedgroup(e.target.value);\n  };\n  const [color, setcolor] = useState(\"#ffffff\");\n  const Changecolor = e => {\n    setcolor(e.target.value);\n  };\n  const haj = () => {\n    setcolor(\"#d62358\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groupsetting\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Group Setting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"groupsetting\",\n        children: \"Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changecolor\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          list: \"grouplist\",\n          id: \"changegroup\",\n          value: selectedgroup,\n          onChange: ChangeGroup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"grouplist\",\n          children: grouplist.map(d => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: d\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          id: \"inputcolor\",\n          value: color,\n          onChange: Changecolor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), selectedgroup + \" \" + color, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: haj,\n        children: \"change color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), groupinsetting]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(GroupSetting, \"qVvBlPcZsuNpcd3QN9hke15ar2Y=\");\n_c = GroupSetting;\nexport default GroupSetting;\nvar _c;\n$RefreshReg$(_c, \"GroupSetting\");","map":{"version":3,"names":["useDebugValue","useEffect","useState","Menu","jsxDEV","_jsxDEV","GroupSetting","_ref","_s","data","setData","settingprofile","setsettingprofile","rerenderStatus","localStorage","getItem","JSON","parse","current","setItem","stringify","grouplist","map","item","group","selectedgroup","setselectedgroup","groupinsetting","d","name","ChangeGroup","e","target","value","color","setcolor","Changecolor","haj","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","list","onChange","type","onClick","_c","$RefreshReg$"],"sources":["D:/documents/js/time-management-tool/src/pages/group/groupsetting.js"],"sourcesContent":["import { useDebugValue, useEffect, useState } from \"react\";\r\nimport Menu from \"../menu\";\r\n\r\nconst GroupSetting = ({ data, setData, settingprofile, setsettingprofile, rerenderStatus }) => {\r\n\r\n    useEffect(()=> {\r\n        if (localStorage.getItem(\"user\") != null) {\r\n            setData(JSON.parse(localStorage.getItem(\"user\")))\r\n        }\r\n    }, [\"a\"])\r\n\r\n    useEffect(()=> {\r\n        if (rerenderStatus.current == false) {\r\n            return;\r\n        } else {\r\n            localStorage.setItem('user', JSON.stringify(data));\r\n            rerenderStatus.current = false; \r\n        }\r\n    }, [data]);\r\n\r\n    let grouplist = data.map((item)=>   item.group    );\r\n    const [selectedgroup, setselectedgroup] = useState(\"\");\r\n    let groupinsetting = settingprofile.group.map((d)=>d.name);\r\n    const ChangeGroup = (e) => {\r\n        setselectedgroup(e.target.value);\r\n        \r\n    }\r\n\r\n    const [color, setcolor] = useState(\"#ffffff\");\r\n    const Changecolor = (e) => {\r\n        setcolor(e.target.value);\r\n    }\r\n\r\n   const haj = () => {\r\n    setcolor(\"#d62358\")\r\n   }\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <Menu/>\r\n            <div className=\"groupsetting\">\r\n                <h1>Group Setting</h1>\r\n                <h3 id=\"groupsetting\">Color</h3>\r\n                <div className=\"changecolor\">\r\n                    <input list=\"grouplist\" id=\"changegroup\" value={selectedgroup} onChange={ChangeGroup} />\r\n                    <datalist id=\"grouplist\">\r\n                    {grouplist.map((d)=> {\r\n                        return (\r\n                            <option value={d} />\r\n                        )\r\n                    })}\r\n                    </datalist>\r\n                    <input type=\"color\" id=\"inputcolor\" value={color} onChange={Changecolor} />\r\n                </div>\r\n                {selectedgroup+\" \"+color}\r\n                <button onClick={haj}>change color</button>{groupinsetting}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default GroupSetting;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}